{"version":3,"sources":["components/Card.js","components/Home.js","components/ApiCalls.js","components/Question.js","components/Quiz.js","components/App.js","index.js"],"names":["Card","props","category","background","react_default","a","createElement","className","alt","src","Home","react_router_dom","to","components_Card","apiCalls","sports","music","geography","history","animals","movies","spanStyle","fontWeight","marginRight","Question","_useState","useState","_useState2","Object","slicedToArray","selected","setSelected","_useState3","_useState4","answers","setAnswers","_useState5","_useState6","correctAnswer","setCorrectAnswer","question","number","correct","incorrect","submitted","updateQuestionStatus","useEffect","randIndex","Math","floor","random","incorrectAnswers","i","push","rawHTML","updateSelected","answer","length","style","width","margin","React","dangerouslySetInnerHTML","__html","onClick","Quiz","quizType","useParams","questions","setQuestions","isSubmitted","setIsSubmitted","questionStatus","setQuestionStatus","_useState7","_useState8","score","setScore","_getQuiz","asyncToGenerator","regenerator_default","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","this","apply","arguments","_x","getQuiz","then","results","index","update","newQuestionStatus","toConsumableArray","charAt","toUpperCase","substring","map","components_Question","key","unescape","correct_answer","incorrect_answers","textDecoration","window","scrollTo","complete","alert","submit","createHistory","App","react_router","exact","path","component","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f390eea.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = props => {\n\n  const {category , background} = props;\n\n    return (\n        <div className = \"cardContainer\">\n          <img alt = \"cardBackground\" src = {background} />\n          <h2 className = \"categoryName\"> {category} </h2>\n        </div>\n    );\n  }\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport {Link} from 'react-router-dom';\n\nconst Home = props => {\n\n\n\n    return (\n      <div className = \"homeContainer\">\n        <Link to =\"/sports\">\n          <Card category = \"Sports\" background = \"imgs/sports.jpg\"/>\n        </Link>\n        <Link to =\"/music\">\n          <Card category = \"Music\" background = \"imgs/music.jpg\"/>\n        </Link>\n        <Link to =\"/geography\">\n          <Card category = \"Geography\" background = \"imgs/geography.jpg\"/>\n        </Link>\n        <Link to =\"/history\">\n          <Card category = \"History\" background = \"imgs/history.jpg\"/>\n        </Link>\n        <Link to =\"/movies\">\n          <Card category = \"Movies\" background = \"imgs/movies.jpg\"/>\n        </Link>\n        <Link to =\"/animals\">\n          <Card category = \"Animals\" background = \"imgs/animals.jpg\"/>\n        </Link>\n      </div>\n  );\n  }\n\n\nexport default Home;\n\n\n","const apiCalls = {\n    \"sports\": \"https://opentdb.com/api.php?amount=5&category=21&type=multiple\",\n    \"music\": \"https://opentdb.com/api.php?amount=5&category=12&type=multiple\",\n    \"geography\": \"https://opentdb.com/api.php?amount=5&category=22&type=multiple\",\n    \"history\": \"https://opentdb.com/api.php?amount=5&category=23&type=multiple\",\n    \"animals\":\"https://opentdb.com/api.php?amount=5&category=27&type=multiple\", \n    \"movies\": \"https://opentdb.com/api.php?amount=5&category=11&type=multiple\",\n}\n\nexport default apiCalls","import React, { useState, useEffect } from 'react';\n\n\nconst spanStyle = {\n  fontWeight: \"bold\",\n  marginRight: \"10px\",\n}\n\n\nconst Question = props => {\n\n  const [selected , setSelected] = useState(-1);\n  const [answers, setAnswers] = useState([])\n  const [correctAnswer, setCorrectAnswer] = useState(-1)\n  const {question, number, correct, incorrect, submitted, updateQuestionStatus} = props; \n\n  useEffect(()=> {\n    let answers = [];\n    let randIndex = Math.floor(Math.random() * 3); \n    let incorrectAnswers = 0;\n    for (let i = 0; i < 3; i++) {\n      if (i === randIndex) {\n        answers.push(correct)\n      }\n      else {\n        answers.push(incorrect[incorrectAnswers])\n        incorrectAnswers++;\n      }\n    }\n    setAnswers(answers)\n    setCorrectAnswer(randIndex)\n  },[])\n\n  const updateSelected = (answer) => {\n    if (answer === correctAnswer) {\n      updateQuestionStatus(number-1, 2)\n    }\n    else {\n      updateQuestionStatus(number-1, 1)\n    }\n    setSelected(answer)\n  }\n\n  const renderHTML = (rawHTML) =>  //We need this function to decode the string given by the API\n      React.createElement(\"div\", { dangerouslySetInnerHTML: { __html: rawHTML } });\n\n  if (answers.length === 0) {\n    return (\n      <div className = \"questionContainer\"> \n        <p> Loading Question </p> \n      </div>\n    )\n  }\n\n  else if (submitted) {\n    return (\n      <div className=\"questionContainer\">\n        <img className = \"resultIcon\" alt = \"result\" src = {selected === correctAnswer ? \"imgs/checkmark.png\" : \"imgs/wrong.png\" }/>\n        <h2 className=\"questionNumber\"> Question {number} </h2>\n        <div style={{ width: \"90%\", margin: \"auto\" }}>\n          <h2 className=\"question\"> {question} </h2>\n          <div className={\"answerContainer \" + (correctAnswer === 0 ? \"green\" : \"grey\") + (selected === 0 ? \"Selected\" : \"\")}   >\n            <p><span style={spanStyle}>A)</span> {answers[0]} </p>\n          </div>\n          <div className={\"answerContainer \" + (correctAnswer === 1 ? \"green\" : \"grey\") + (selected === 1 ? \"Selected\" : \"\")}  >\n            <p><span style={spanStyle}>B)</span> {answers[1]}  </p>\n          </div>\n          <div className={\"answerContainer \" + (correctAnswer === 2 ? \"green\" : \"grey\") + (selected === 2 ? \"Selected\" : \"\")} >\n            <p><span style={spanStyle}>C)</span> {answers[2]} </p>\n          </div>\n        </div>\n      </div>\n    ); \n  }\n\n  return (\n    <div className=\"questionContainer\">\n      <h2 className=\"questionNumber\"> Question {number} </h2>\n      <div style={{ width: \"90%\", margin: \"auto\" }}>\n        <h2 className=\"question\"> {renderHTML(question)} </h2>\n        <div onClick = {() => {updateSelected(0)}} className={\"answerContainer red\" + (selected === 0 ? \"Selected\" : \"\")}   >\n          <p><span style={spanStyle}>A)</span> {answers[0]} </p>\n        </div>\n        <div onClick = {() => {updateSelected(1)}} className={\"answerContainer blue\" + (selected === 1 ? \"Selected\" : \"\")}  >\n          <p><span style={spanStyle}>B)</span> {answers[1]}  </p>\n        </div>\n        <div onClick = {() => {updateSelected(2)}} className={\"answerContainer purple\" + (selected === 2 ? \"Selected\" : \"\")} >\n          <p><span style={spanStyle}>C)</span> {answers[2]} </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Question;\n\n\n","import React, { useState, useEffect } from 'react';\nimport apiCalls from './ApiCalls';\nimport { useParams } from 'react-router';\nimport Question from './Question';\nimport {Link} from 'react-router-dom';\n\n\nconst Quiz = (props) => {\n\n  const {quizType} = useParams()\n  const [questions, setQuestions] = useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [questionStatus, setQuestionStatus] = useState([0,0,0,0,0])  //0 unanswered, 1 wrong, 2 correct\n  const [score, setScore] = useState(0);\n\n  async function getQuiz(quizType) {\n    let res = await fetch(apiCalls[quizType]);\n    let data = await res.json()\n    return data\n  }\n\n  useEffect(() => {\n    getQuiz(quizType)\n    .then(data => {\n      setQuestions(data.results)\n    })\n  }, [])\n\n  const updateQuestionStatus = (index, update) => {\n    let newQuestionStatus = [...questionStatus]\n    newQuestionStatus[index] = update;\n    setQuestionStatus(newQuestionStatus);\n  }\n\n  const submit = () => {\n    let complete = true;\n    let score = 0;\n    for (let i = 0; i < 5; i++) {\n      if (questionStatus[i] === 0) {\n        complete = false;\n      }\n      score+= questionStatus[i]\n    }\n    if (complete) {\n      setScore(score - 5) //we minus 5 because we give 2 for correct score and 1 for answering\n      setIsSubmitted(true);\n    }\n    else {\n      alert(\"Please answer all the questions before submitting\")\n    }\n  }\n\n if (questions.length === 0) {\n   return (\n      <div className=\"quizContainer\">\n        <img alt = \"loading\" className = \"loadingWheel\" src = \"imgs/loading.gif\"/>\n      </div>\n   )\n  }\n\n  return (\n    <div className=\"quizContainer\">\n      <h1 className = \"quizTitle\"> {quizType.charAt(0).toUpperCase() + quizType.substring(1,quizType.length)} quiz </h1> \n      {isSubmitted && <h2 className = \"scoreDisplay\">You answered {score} out of 5 questions correctly</h2> }\n      {questions.map((question,index) => (\n        <Question key = {index} number = {index + 1} question = { unescape(question.question)} correct = {question.correct_answer} incorrect = {question.incorrect_answers} submitted = {isSubmitted} updateQuestionStatus = {updateQuestionStatus}/>\n      ))}\n      {!isSubmitted ? \n      <button onClick = {()=> {submit(); window.scrollTo(0, 0)}} className = \"submitButton\"> Submit Answers </button>\n      :\n      <Link to = \"/\" style = {{textDecoration: \"none\"}}>\n        <button onClick = {()=>window.scrollTo(0, 0)} className = \"submitButton\"> Return to Menu </button>\n      </Link> \n      } \n    </div>\n  );\n}\n\n\nexport default Quiz;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router';\nimport { Switch, Route } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport Home from './Home';\nimport '../scss/app.scss';\nimport Quiz from './Quiz'\n\nconst history = createHistory();\n\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router history={history}>\n      <div className=\"app-container\">\n        <Switch>\n          <Route exact path=\"/\" component = {Home}/>\n          <Route exact path=\"/:quizType\" component = {Quiz}/>\n          />\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}